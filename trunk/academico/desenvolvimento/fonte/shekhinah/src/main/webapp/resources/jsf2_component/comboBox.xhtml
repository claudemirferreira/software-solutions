<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:cc="http://java.sun.com/jsf/composite"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:f="http://java.sun.com/jsf/core">

	<cc:interface componentType="combobox">
	
		<cc:attribute name="idCmb" required="false" default="id" />
		<cc:attribute name="label" required="false" />	
		<cc:attribute name="required" required="false" default="false" />
		<cc:attribute name="disabled" required="false" default="false" />
		<cc:attribute name="selectOne" required="false" default="false" />
		<cc:attribute name="selectAll" required="false" default="#{not cc.attrs.selectOne ? true : false}" />
		<cc:attribute name="selectOneMsg" required="false" default="-- Selecione um registro --" />
		<cc:attribute name="selectAllMsg" required="false" default="-- Todos os registros --" />
		
		<cc:attribute name="requiredMessage" default="Campo obrigatório" required="false" />
		
		<cc:attribute name="effect" default="fade" />
		<cc:attribute name="filter" default="true" />
		<cc:attribute name="filterMatchMode" default="startsWith" />
		
		<cc:attribute name="foreignKey" required="false" default="false" shortDescription="Indica se o item é uma entidade ou não. Caso, false o item deve ser do tipo SelectItem." />
		<cc:attribute name="atributo" required="#{not empty foreignKey}" shortDescription="Usado para descrição do item do combo. Obrigatório quando  foreignKey for true" />
		
		<cc:attribute name="value" required="true" />
		<cc:attribute name="list" required="true" />
		
		<cc:attribute name="render" default="true" required="false" shortDescription="Indica se o componente deve ser exibido ou não" />
		
		<cc:attribute name="update" required="false"  />
		<cc:attribute name="immediate" default="false" required="false"  />
		
		<cc:attribute name="listener" method-signature="void listener()" />
		<cc:attribute name="valueChangeListener" required="false" default="#{comboChangeListener.valueChanged}" 
					method-signature="void valueChanged(javax.faces.event.ValueChangeEvent)" />
		
	</cc:interface>
	
	<cc:implementation>
	
		<h:panelGrid columns="2" width="500" rendered="#{cc.attrs.render}" columnClasses="input_label, input_required">
		  
		 		<p:column width="150px" rendered="#{not empty cc.attrs.label}" >
					<h:outputLabel value="#{cc.attrs.label}" for="#{cc.attrs.id}" rendered="#{not empty cc.attrs.label}"/>
			 		<h:outputText value="  * " styleClass="input_required" rendered="#{cc.attrs.required}" />
		 		</p:column>
		 		
		 		<p:column>
	 				<c:set var="idComp" value="cb_#{cc.attrs.id}"/>
	 				
	 				<!-- FIXME implementar regra para atualizar varios componentes
	 				<c:set var="updateComps" value="#{componentUtil.splitNameComponent(cc.attrs.update)}" />  -->
	 				
		 			<c:if test="#{not cc.attrs.foreignKey}">
						<p:selectOneMenu id="#{idComp}" value="#{cc.attrs.value}" immediate="#{cc.attrs.immediate}" valueChangeListener="#{cc.attrs.valueChangeListener}" required="#{cc.attrs.required}" requiredMessage="#{cc.attrs.requiredMessage}" disabled="#{cc.attrs.disabled}" effect="#{cc.attrs.effect}" filter="#{cc.attrs.filter}" filterMatchMode="#{cc.attrs.filterMatchMode}" >
							<c:if test="#{cc.attrs.selectOne}">
					        	<f:selectItem itemLabel="#{cc.attrs.selectOneMsg}" itemValue="" />
				        	</c:if>
				        	<c:if test="#{cc.attrs.selectAll}">
					        	<f:selectItem itemLabel="#{cc.attrs.selectAllMsg}" itemValue="" />
				        	</c:if>
						    <f:selectItems value="#{cc.attrs.list}" var="item" itemLabel="#{item.label}" itemValue="#{item.value}"/>
							
							<c:if test="#{cc.getValueExpression('listener') != null}">
								<p:ajax immediate="#{cc.attrs.immediate}" 
										listener="#{cc.attrs.listener}"
					            		event="change" process="@this" 
					            		update=":#{p:component(cc.attrs.update)}" 
					            		disabled="#{empty cc.attrs.update}"/>
							</c:if>
							<c:if test="#{cc.getValueExpression('listener') == null}">
								<p:ajax immediate="#{cc.attrs.immediate}"
					            		event="change" process="@this" 
					            		update=":#{p:component(cc.attrs.update)}" 
					            		disabled="#{empty cc.attrs.update}"/>
							</c:if>
				        </p:selectOneMenu>
     					<br />
						<h:message for="#{idComp}" styleClass="error" />
		 			</c:if>
		 			
		 			<c:if test="#{cc.attrs.foreignKey}">
				        <p:selectOneMenu id="#{idComp}" value="#{cc.attrs.value}" valueChangeListener="#{cc.attrs.valueChangeListener}" immediate="#{cc.attrs.immediate}" required="#{cc.attrs.required}" requiredMessage="#{cc.attrs.requiredMessage}" disabled="#{cc.attrs.disabled}" converter="entityConverter" effect="#{cc.attrs.effect}" filter="#{cc.attrs.filter}" filterMatchMode="#{cc.attrs.filterMatchMode}" >
				        	<c:if test="#{cc.attrs.selectOne}">
					        	<f:selectItem itemLabel="#{cc.attrs.selectOneMsg}" itemValue="" />
				        	</c:if>
				        	<c:if test="#{cc.attrs.selectAll}">
					        	<f:selectItem itemLabel="#{cc.attrs.selectAllMsg}" itemValue="" />
				        	</c:if>
				            <f:selectItems value="#{cc.attrs.list}" var="item" itemLabel="#{cc.attrs.atributo}" itemValue="#{item}"/>
				            
							<c:if test="#{cc.getValueExpression('listener') != null}">
								<p:ajax immediate="#{cc.attrs.immediate}" 
										listener="#{cc.attrs.listener}"
					            		event="change" process="@this" 
					            		update=":#{p:component(cc.attrs.update)}" 
					            		disabled="#{empty cc.attrs.update}"/>
							</c:if>
							<c:if test="#{cc.getValueExpression('listener') == null}">
								<p:ajax immediate="#{cc.attrs.immediate}"
					            		event="change" process="@this" 
					            		update=":#{p:component(cc.attrs.update)}" 
					            		disabled="#{empty cc.attrs.update}"/>
							</c:if>
				        </p:selectOneMenu>
						<br />
						<h:message for="#{idComp}" styleClass="error" />
			        </c:if>
		 		</p:column>
		 		
		</h:panelGrid>
 		
	</cc:implementation>
	
</html>
