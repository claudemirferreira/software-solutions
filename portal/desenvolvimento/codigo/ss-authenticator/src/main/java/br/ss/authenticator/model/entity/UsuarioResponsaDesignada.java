package br.ss.authenticator.model.entity;

// Generated 11/07/2012 15:35:00 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import lombok.Getter;
import lombok.Setter;
import br.ss.core.constant.CsTerminoConstant;
import br.ss.core.model.entity.AbstractEntity;

/**
 * UsuarioResponsaDesignada generated by hbm2java
 */
@Entity
@Table(name = "usuario_responsa_designada", schema = "authenticator")
@SequenceGenerator(name = "usuario_responsa_designada_id_usuario_responsa_designada_seq", 
					sequenceName = "authenticator.usuario_responsa_designada_id_usuario_responsa_designada_seq")
public class UsuarioResponsaDesignada extends AbstractEntity implements java.io.Serializable {

	private static final long serialVersionUID = 9193464967314581399L;
	
	@Getter @Setter
	@GeneratedValue(generator = "usuario_responsa_designada_id_usuario_responsa_designada_seq", strategy = GenerationType.SEQUENCE)
	@Id
	@Column(name = "id_usuario_responsa_designada", unique = true, nullable = false)
	private Integer idUsuarioResponsaDesignada;

	@Getter @Setter
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario_designador", nullable = false)
	private Usuario usuarioDesignador;

	@Getter @Setter
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario", nullable = false)
	private Usuario usuario;
	
	@Getter @Setter
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_responsabilidade", nullable = false)
	private Responsabilidade responsabilidade;

	@Getter @Setter
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_inicio", nullable = false, length = 29)
	private Date dtInicio;

	@Getter @Setter
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_fim", length = 29)
	private Date dtFim;

	@Getter @Setter
	@Column(name = "cs_termino", nullable = false)
	@Enumerated
	private CsTerminoConstant csTermino;

	@Getter @Setter
	@Column(name = "cs_excluido", nullable = false)
	private Boolean csExcluido;

	@Getter @Setter
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_atribuicao", nullable = false, length = 22)
	private Date dtAtribuicao;

	@Getter @Setter
	@Column(name = "tx_motivo")
	private String txMotivo;

	@Getter @Setter
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioResponsaDesignada")
	private Set<UsuarioAcesso> usuarioAcessos = new HashSet<UsuarioAcesso>(0);

	
	public UsuarioResponsaDesignada() { }

	public UsuarioResponsaDesignada(Integer idUsuarioResponsaDesignada,
			Usuario usuarioByIdUsuarioDesignador,
			Responsabilidade responsabilidade, Usuario usuarioByIdUsuario,
			Date dtInicio, CsTerminoConstant csTermino, boolean csExcluido,
			Date dtAtribuicao) {
		this.idUsuarioResponsaDesignada = idUsuarioResponsaDesignada;
		this.usuarioDesignador = usuarioByIdUsuarioDesignador;
		this.responsabilidade = responsabilidade;
		this.usuario = usuarioByIdUsuario;
		this.dtInicio = dtInicio;
		this.csTermino = csTermino;
		this.csExcluido = csExcluido;
		this.dtAtribuicao = dtAtribuicao;
	}

	public UsuarioResponsaDesignada(Integer idUsuarioResponsaDesignada,
			Usuario usuarioByIdUsuarioDesignador,
			Responsabilidade responsabilidade, Usuario usuarioByIdUsuario,
			Date dtInicio, Date dtFim, CsTerminoConstant csTermino, boolean csExcluido,
			Date dtAtribuicao, String txMotivo,
			Set<UsuarioAcesso> usuarioAcessos) {
		this.idUsuarioResponsaDesignada = idUsuarioResponsaDesignada;
		this.usuarioDesignador = usuarioByIdUsuarioDesignador;
		this.responsabilidade = responsabilidade;
		this.usuario = usuarioByIdUsuario;
		this.dtInicio = dtInicio;
		this.dtFim = dtFim;
		this.csTermino = csTermino;
		this.csExcluido = csExcluido;
		this.dtAtribuicao = dtAtribuicao;
		this.txMotivo = txMotivo;
		this.usuarioAcessos = usuarioAcessos;
	}

}
