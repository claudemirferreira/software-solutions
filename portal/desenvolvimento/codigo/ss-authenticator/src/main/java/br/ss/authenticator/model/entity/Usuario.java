package br.ss.authenticator.model.entity;

// Generated 18/06/2012 13:32:57 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import lombok.Getter;
import lombok.Setter;
import br.ss.core.constant.UsuarioStatusConstant;
import br.ss.core.model.entity.AbstractEntity;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", schema = "authenticator", uniqueConstraints = @UniqueConstraint(columnNames = "tx_login"))
@SequenceGenerator(name = "usuario_id_usuario_seq", sequenceName = "authenticator.usuario_id_usuario_seq")
public class Usuario extends AbstractEntity implements java.io.Serializable {

	private static final long serialVersionUID = 4029079167001458456L;
	
	@Getter @Setter
	@Id
	@GeneratedValue(generator = "usuario_id_usuario_seq", strategy = GenerationType.SEQUENCE)
	@Column(name = "id_usuario", unique = true, nullable = false)
	private Long idUsuario;

	@Getter @Setter
	@Column(name = "tx_login", unique = true, nullable = false, length = 11)
	private String txLogin;

	@Getter @Setter
	@Column(name = "tx_email", length = 60)
	private String txEmail;

	@Getter @Setter
	@Column(name = "tx_senha", nullable = false, length = 100)
	private String txSenha;

	@Getter @Setter
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_cadastro", nullable = false, length = 29)
	private Date dtCadastro;
	
	@Getter @Setter
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_ultimo_acesso", nullable = false, length = 29)
    private Date dtUltimoAcesso;

	@Getter @Setter
	@Column(name = "cs_status", nullable = false)
	@Enumerated
	private UsuarioStatusConstant csStatus;

	@Getter @Setter
	@OneToMany( cascade = { CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH }, fetch = FetchType.LAZY, mappedBy = "usuario" )
	private Set<UsuarioStatus> usuarioStatuses = new HashSet<UsuarioStatus>( 0 );

	@Getter @Setter
	@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
	private Set<GrupoUsuario> grupoUsuarios = new HashSet<GrupoUsuario>(0);
	
	@Getter @Setter
	@OneToMany(fetch=FetchType.LAZY, mappedBy="usuarioDesignador")
	private Set<GrupoUsuario> grupoUsuariosForDesignador = new HashSet<GrupoUsuario>(0);

	@Getter @Setter
	@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
	private Set<UsuarioPerfil> usuarioPerfils = new HashSet<UsuarioPerfil>(0);
	
	@Getter @Setter
	@OneToMany(fetch=FetchType.LAZY, mappedBy="usuarioDesignador")
	private Set<UsuarioPerfil> usuarioPerfilsForDesignador = new HashSet<UsuarioPerfil>(0);

	@Getter @Setter
	@OneToMany(fetch=FetchType.LAZY, mappedBy="usuarioDesignador")
	private Set<UsuarioResponsaDesignada> usuarioResponsaDesignadasForDesignador = new HashSet<UsuarioResponsaDesignada>(0);

	@Getter @Setter
	@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
	private Set<UsuarioResponsaDesignada> usuarioResponsaDesignadas = new HashSet<UsuarioResponsaDesignada>(0);

	@Getter @Setter
	@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
	private Set<UsuarioSenha> usuarioSenhas = new HashSet<UsuarioSenha>(0);
	
	public Usuario() {
	}

	public Usuario(Long idUsuario, String txLogin, Date dtCadastro,
			String txSenha, UsuarioStatusConstant csStatus) {
		this.idUsuario = idUsuario;
		this.txLogin = txLogin;
		this.dtCadastro = dtCadastro;
		this.txSenha = txSenha;
		this.csStatus = csStatus;
	}

}
